---
import type { CollectionEntry } from 'astro:content'

interface Props {
  posts: CollectionEntry<'posts'>[]
}

const { posts } = Astro.props

// 全ての記事からタグをフラットな配列として取り出します
const allTags = posts.flatMap((post) => post.data.tags || [])

// 各タグの出現回数を数えます
const tagCounts = allTags.reduce(
  (acc, tag) => {
    acc[tag] = (acc[tag] || 0) + 1
    return acc
  },
  {} as Record<string, number>,
)

// 出現回数が2回以上のタグのみをフィルタリングし、多い順にソートします
const tagsWithCount = Object.entries(tagCounts)
  .map(([tag, count]) => ({ tag, count }))
  .filter(({ count }) => count >= 2)
  .sort((a, b) => b.count - a.count)
---

<ul class="flex flex-wrap gap-x-3 gap-y-4 my-5">
  {
    tagsWithCount.map(({ tag, count }) => (
      <li>
        <a
          href={`/tags/${encodeURIComponent(tag)}`}
          class="flex gap-2.5 py-2 pl-4 pr-3 bg-accent/7 rounded-3xl"
        >
          {tag}
          <span class="rounded-full bg-foreground/7 text-primary px-2 py-1 text-xs font-semibold">
            {count}
          </span>
        </a>
      </li>
    ))
  }
</ul>
